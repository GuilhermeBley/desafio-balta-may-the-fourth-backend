// <auto-generated />
using System;
using CodeOrderAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CodeOrderAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240421192054_initial_creation")]
    partial class initial_creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CodeOrderAPI.Model.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Episode")
                        .HasColumnType("integer");

                    b.Property<string>("OpeningCrawl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Producer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Filme", (string)null);
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Nave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CargoCapacity")
                        .HasColumnType("numeric");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Consumables")
                        .HasColumnType("interval");

                    b.Property<decimal>("CostInCredits")
                        .HasColumnType("numeric");

                    b.Property<int>("Crew")
                        .HasColumnType("integer");

                    b.Property<decimal>("HyperdriveRating")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Length")
                        .HasColumnType("numeric");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("MaxSpeed")
                        .HasColumnType("numeric");

                    b.Property<int>("Mglt")
                        .HasColumnType("integer");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Passengers")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Nave", (string)null);
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Personagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthYear")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("integer");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("HairColor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlanetaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlanetaId1")
                        .HasColumnType("integer");

                    b.Property<string>("SkinColor")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.HasIndex("PlanetaId");

                    b.HasIndex("PlanetaId1");

                    b.ToTable("Personagem", (string)null);
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Planeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Climate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Diameter")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Gravity")
                        .HasColumnType("numeric");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<TimeSpan>("OrbitalPeriod")
                        .HasMaxLength(500)
                        .HasColumnType("interval");

                    b.Property<long>("Population")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan>("RotationPeriod")
                        .HasMaxLength(500)
                        .HasColumnType("interval");

                    b.Property<int>("SurfaceWater")
                        .HasColumnType("integer");

                    b.Property<string>("Terrain")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Planeta", (string)null);
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CargoCapacity")
                        .HasColumnType("numeric");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<TimeSpan>("Consumables")
                        .HasColumnType("interval");

                    b.Property<decimal>("CostInCredits")
                        .HasColumnType("numeric");

                    b.Property<int>("Crew")
                        .HasColumnType("integer");

                    b.Property<decimal>("Length")
                        .HasColumnType("numeric");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("MaxSpeed")
                        .HasColumnType("numeric");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Passengers")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Veiculo", (string)null);
                });

            modelBuilder.Entity("FilmeNave", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("integer");

                    b.Property<int>("StarshipsId")
                        .HasColumnType("integer");

                    b.HasKey("MoviesId", "StarshipsId");

                    b.HasIndex("StarshipsId");

                    b.ToTable("FilmeNave");
                });

            modelBuilder.Entity("FilmePlaneta", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanetasId")
                        .HasColumnType("integer");

                    b.HasKey("MoviesId", "PlanetasId");

                    b.HasIndex("PlanetasId");

                    b.ToTable("FilmePlaneta");
                });

            modelBuilder.Entity("FilmeVeiculo", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("integer");

                    b.Property<int>("VeiculosId")
                        .HasColumnType("integer");

                    b.HasKey("MoviesId", "VeiculosId");

                    b.HasIndex("VeiculosId");

                    b.ToTable("FilmeVeiculo");
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Personagem", b =>
                {
                    b.HasOne("CodeOrderAPI.Model.Filme", null)
                        .WithMany("Personagens")
                        .HasForeignKey("FilmeId");

                    b.HasOne("CodeOrderAPI.Model.Planeta", "Planeta")
                        .WithMany()
                        .HasForeignKey("PlanetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeOrderAPI.Model.Planeta", null)
                        .WithMany("Characters")
                        .HasForeignKey("PlanetaId1");

                    b.Navigation("Planeta");
                });

            modelBuilder.Entity("FilmeNave", b =>
                {
                    b.HasOne("CodeOrderAPI.Model.Filme", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeOrderAPI.Model.Nave", null)
                        .WithMany()
                        .HasForeignKey("StarshipsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmePlaneta", b =>
                {
                    b.HasOne("CodeOrderAPI.Model.Filme", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeOrderAPI.Model.Planeta", null)
                        .WithMany()
                        .HasForeignKey("PlanetasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmeVeiculo", b =>
                {
                    b.HasOne("CodeOrderAPI.Model.Filme", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeOrderAPI.Model.Veiculo", null)
                        .WithMany()
                        .HasForeignKey("VeiculosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Filme", b =>
                {
                    b.Navigation("Personagens");
                });

            modelBuilder.Entity("CodeOrderAPI.Model.Planeta", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
